<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd  
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

	<!-- 使用XML。对切面编程进行配置 -->
	<!-- 第一种方式,通过指定ID绑定基本类的AOP切面编程 -->
	<!-- id:唯一标示,标示切面方法	class:切面具方法 -->
	<bean id="moocAspect" class="com.imooc.aop.schema.advice.MoocAspect"></bean>
	
	<bean id="aspectBiz" class="com.imooc.aop.schema.advice.biz.AspectBiz"></bean>
	
	<!-- 可以有多个,表示一组aop配置 -->
	<aop:config>
		<!-- 准备进行的AOP配置.id:唯一名称 	ref:与切面方法的类一致 -->
		<aop:aspect id="moocAspectAOP" ref="moocAspect">
			<!-- 切点的配置,没有指定类型 	id:切入点的名字	expression:表达式,对这个包下的所有类进行	 -->	
			<aop:pointcut id="moocPiontcut" expression="execution(* com.imooc.aop.schema.advice.biz.*Biz.*(..))"/>
			<!-- 前置通知 	method:类型	pointcut-ref:切点的映射 -->
 			<aop:before method="before" pointcut-ref="moocPiontcut"/>
 			<!-- 后置通知 -->
 			<aop:after-returning method="afterReturning" pointcut-ref="moocPiontcut"/>
 			<!-- 抛出异常的方法 -->
 			<aop:after-throwing method="afterThrowing" pointcut-ref="moocPiontcut"/>
 			<!-- 最终通知 -->
 			<aop:after method="after" pointcut-ref="moocPiontcut"/>
 			<!-- 环绕通知 -->
 			<aop:around method="around" pointcut-ref="moocPiontcut"/>
			<!-- 环绕通知,使用参数 -->
			<aop:around method="aroundInit" pointcut="execution(* com.imooc.aop.schema.advice.biz.AspectBiz.init(String, int))
							and args(bizName, times)"/>
			<!-- 类型转化的通知,实现直接接口实现实现类,配置文件的通知只支持单例模式-->
			<aop:declare-parents types-matching="com.imooc.aop.schema.advice.biz.*(+)" 
					implement-interface="com.imooc.aop.schema.advice.Fit"
					default-impl="com.imooc.aop.schema.advice.FitImpl"/>
		</aop:aspect>
	</aop:config>

 </beans>
