package timedTask.timer;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Timer;


/**对自定义时间任务进行调度*/
public class TimerTest {
	
	
	public void testOne() {
		//1.创建调度实例
		Timer timer = new Timer();
		//2.创建任务实例
		TimerTaskTest task = new TimerTaskTest();
		task.setName("JION.JION");
		//3.执行定时调度:当前时间进行调度,随后没两秒进行一次.
		//执行任务的run方法,当前时间后多少毫秒,随后间隔多少毫秒
		timer.schedule(task, 2000L, 1000L);	
	}
	

	/**设定时间,随后进行调度*/
	public void testTwo() {
		Timer timer = new Timer();
		TimerTaskTest task = new TimerTaskTest();
		task.setName("JION.JION");
		//创建时间对象
		Calendar calendar = Calendar.getInstance();//单例模式
		//创建时间格式对象 
		SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd : hh:mm:ss");
		//打印当前时间
		System.out.println("执行时间"+simpleDateFormat.format(calendar.getTime()));
		//为当前时间加5秒
		calendar.add(Calendar.SECOND, 5);
		//执行任务的run方法,当前时间后多少毫秒,随后线程阻塞
		timer.schedule(task, calendar.getTime());
	}
	
	/**设定时间,随后进行调度,每隔毫秒数进行*/
	public void testThree() {
		Timer timer = new Timer();
		TimerTaskTest task = new TimerTaskTest();
		task.setName("JION.JION");
		//创建时间对象
		Calendar calendar = Calendar.getInstance();//单例模式
		//创建时间格式对象 
		SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd : hh:mm:ss");
		//打印当前时间
		System.out.println("执行时间"+simpleDateFormat.format(calendar.getTime()));
		//为当前时间加5秒
		calendar.add(Calendar.SECOND, 5);
		//执行任务的run方法,当前时间后多少毫秒,随后间隔2000毫秒,进行执行
		timer.schedule(task, calendar.getTime(),2000L);
	}
	
	/**设定时间,随后进行调度,每隔毫秒数进行*/
	public void testFour() {
		Timer timer = new Timer();
		TimerTaskTest task = new TimerTaskTest();
		task.setName("JION.JION");
		//创建时间对象
		Calendar calendar = Calendar.getInstance();//单例模式
		//创建时间格式对象 
		SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd : hh:mm:ss");
		//打印当前时间
		System.out.println("执行时间"+simpleDateFormat.format(calendar.getTime()));
		//执行任务的run方法,延时2000毫秒,进行执行
		timer.schedule(task,2000L);
	}
	
	/**设定时间,随后进行调度,每隔毫秒数进行*/
	public void testFive() {
		Timer timer = new Timer();
		TimerTaskTest task = new TimerTaskTest();
		task.setName("JION.JION");
		//创建时间对象
		Calendar calendar = Calendar.getInstance();//单例模式
		//创建时间格式对象 
		SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd : hh:mm:ss");
		//打印当前时间
		System.out.println("执行时间"+simpleDateFormat.format(calendar.getTime()));
		//执行任务的run方法,延时2000毫秒,进行执行,随后每5s执行
		timer.schedule(task,2000L,5000L);
	}
	
	/**设定时间,随后进行调度,每隔毫秒数进行*/
	public void testSix() {
		Timer timer = new Timer();
		TimerTaskTest task = new TimerTaskTest();
		task.setName("JION.JION");
		//创建时间对象
		Calendar calendar = Calendar.getInstance();//单例模式
		//创建时间格式对象 
		SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd : hh:mm:ss");
		//打印当前时间
		System.out.println("执行时间"+simpleDateFormat.format(calendar.getTime()));
		//执行任务的run方法,延时2000毫秒,进行执行,随后每5s执行
		timer.scheduleAtFixedRate(task, calendar.getTime(),2000L);
	}
	
	
	public static void main(String[] args) {
		new TimerTest().testFive();
	}
}
