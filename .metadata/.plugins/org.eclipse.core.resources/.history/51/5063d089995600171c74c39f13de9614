package fileReadOrWrite.InputOrOutputStreamType;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;

/**
 * 	1.字节流,实现InputStream或者OutputStream抽象类
 * 	2.当读到结尾的时候返回-1
 * 	3.输入流基本方法
 * 		int b = in.read();			读取一个字符的无符号填充到低八位
 * 		in.read(byte[] buff)		读取字节到字节数组
 * 		in.read(byte[] buff,int start,int size)	读取文件到开始和长度指定的字节数组中
 * 	4.输出流基本方法
 * 		out.write(int b)			写出一个byte到低八位
 * 		out.write(byte[] buff)		写入字节到字节数组
 * 		out.write(byte[] buff,int start,int size)字节写入到开始和长度指定的字节数组中
 * 	5.FileInputSteam	继承了父类,对文件进行读取
 * */	
public class InputOrOutputStreamDemol {
	/**读取文件,并打印*/
	public void readAndPrintByByte(String fileName) throws Exception{
		FileInputStream in = new FileInputStream(fileName);
		int b;
		int i=1;
		while( (b=in.read()) != -1){
			if (b <= 0xf) {
				System.out.print("0");
			}
			System.out.print(Integer.toHexString(b)+"  ");
			if (i%10 ==0) {
				System.out.println("");
			}
			i++;
		}
		in.close();
	}
	
	public static void main(String[] args) throws Exception{
		String fileName = "F:\\JAVA_WorkSpace\\JavaBase\\src\\fileReadOrWrite\\InputOrOutputStreamType\\SA";
		File file = new File(fileName);
		new InputOrOutputStreamDemol().readAndPrintByByte(fileName);
	}
}
