package javaEncryption.dhDemo;

import java.security.KeyFactory;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.PublicKey;
import java.security.spec.X509EncodedKeySpec;

import javax.crypto.interfaces.DHPublicKey;
import javax.crypto.spec.DHParameterSpec;

import org.bouncycastle.asn1.pkcs.DHParameter;

public class DhByJDK {

	public static void main(String[] args) throws Exception {
		
		//初始化发送方的公钥
		KeyPairGenerator senderkeyPairGenerator = KeyPairGenerator.getInstance("DH");	//传入加密算法
		senderkeyPairGenerator.initialize(512);		//设置秘钥长度
		KeyPair senderKeyPair = senderkeyPairGenerator.generateKeyPair();		//生成秘钥对
		byte[] senderPublicKey = senderKeyPair.getPublic().getEncoded();		//获得公钥,发送给接收方,生成解密私钥
		
		//初始化接收方的秘钥
		KeyFactory receiverKeyFactory = KeyFactory.getInstance("DH");
		X509EncodedKeySpec x509EncodedKeySpec = new X509EncodedKeySpec(senderPublicKey);	//传入发送方的公钥,生成接收方的私钥
		PublicKey receiverPublicKey = receiverKeyFactory.generatePublic(x509EncodedKeySpec);//接收方的公钥
		DHParameterSpec dhParameterSpec = ((DHPublicKey)receiverPublicKey).getParams();		//获得公钥参数
		KeyPairGenerator receiverKeyPairGenerator = KeyPairGenerator.getInstance("DH");
	}
}
