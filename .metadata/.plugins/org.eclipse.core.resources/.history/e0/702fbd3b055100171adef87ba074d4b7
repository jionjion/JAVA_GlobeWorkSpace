package helloExcel;

import java.io.File;
import java.io.FileOutputStream;

import org.apache.poi.hssf.util.HSSFColor;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFCellStyle;
import org.apache.poi.xssf.usermodel.XSSFFont;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**字体样式和风格的实现*/
public class FontsStyleOrFontsRule {

	/**字体风格*/
	@SuppressWarnings("deprecation")
	public static void fontsStyle() throws Exception{
      
		//创建工作表
		XSSFWorkbook workbook = new XSSFWorkbook();
		//创建工作页
		XSSFSheet spreadsheet = workbook.createSheet("Fontstyle");
		//创建行
		XSSFRow row = spreadsheet.createRow(2);
		//创建字体样式对象.由工作表对象创建
		XSSFFont font = workbook.createFont();
		//设置字体高度
		font.setFontHeightInPoints((short) 30);
		//设置字体样式名
		font.setFontName("华文行楷");
		//设置是否斜体,传入布尔值,缺省为true.
		font.setItalic(true);
		//设置字体颜色
		font.setColor(HSSFColor.BRIGHT_GREEN.index);
		//创建单元格样式.由工作表对象创建
		XSSFCellStyle style = workbook.createCellStyle();
		//将字体样式装载进入单元格样式中
		style.setFont(font);
		//创建单元格,应用样式
		XSSFCell cell = row.createCell(1);
		cell.setCellValue("字体样式");
		//传入单元格样式到单元格中,完成字体样式和单元格样式的设定
		cell.setCellStyle(style);
		//文件输出
		FileOutputStream out = new FileOutputStream(
									new File("字体样式.xlsx"));
		workbook.write(out);
		out.close();
		workbook.close();
		System.out.println("字体样式.xlsx文件创建成功.....");	
	}
	
	/**字体样式规则*/
	public static void fontsRule() {
		 XSSFWorkbook workbook = new XSSFWorkbook(); 
	      XSSFSheet spreadsheet = workbook.createSheet(
	      "Text direction");
	      XSSFRow row = spreadsheet.createRow(2);
	      XSSFCellStyle myStyle = workbook.createCellStyle();
	      myStyle.setRotation((short) 0);
	      XSSFCell cell = row.createCell(1);
	      cell.setCellValue("0D angle");
	      cell.setCellStyle(myStyle);
	      //30 degrees
	      myStyle=workbook.createCellStyle();
	      myStyle.setRotation((short) 30);
	      cell = row.createCell(3);
	      cell.setCellValue("30D angle");
	      cell.setCellStyle(myStyle);
	      //90 degrees
	      myStyle=workbook.createCellStyle();
	      myStyle.setRotation((short) 90);
	      cell = row.createCell(5);
	      cell.setCellValue("90D angle");
	      cell.setCellStyle(myStyle);
	      //120 degrees
	      myStyle=workbook.createCellStyle();
	      myStyle.setRotation((short) 120);
	      cell = row.createCell(7);
	      cell.setCellValue("120D angle");
	      cell.setCellStyle(myStyle);
	      //270 degrees
	      myStyle = workbook.createCellStyle();
	      myStyle.setRotation((short) 270);
	      cell = row.createCell(9);
	      cell.setCellValue("270D angle");
	      cell.setCellStyle(myStyle);
	      //360 degrees
	      myStyle=workbook.createCellStyle();
	      myStyle.setRotation((short) 360);
	      cell = row.createCell(12);
	      cell.setCellValue("360D angle");
	      cell.setCellStyle(myStyle);
	      FileOutputStream out = new FileOutputStream(
	      new File("textdirection.xlsx"));
	      workbook.write(out);
	      out.close();
	      System.out.println( 
	      "textdirection.xlsx written successfully");
	   }
	}
}
	public static void main(String[] args) {
		
	}
}
