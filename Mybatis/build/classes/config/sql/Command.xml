<!DOCTYPE mapper  
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">   

<!-- 主表对应的各种 结构 -->
<!-- 命名空间,区分ID,多为数据库表名 -->
<mapper namespace="Command"> 
	  <resultMap type="bean.Command" id="CommandResult">
	  	<!-- column:对应数据库查询时的字段名,如果查询语句用到了别名,则为别名 -->
	  	<id column="A_ID" jdbcType="INTEGER" property="id"/>
	  	<result column="NAME" jdbcType="VARCHAR" property="name"/>
	  	<result column="DESCRIPTION" jdbcType="VARCHAR" property="description"/>
	  	<!-- 一对多，引用多方的XML集合 -->
	  	<collection property="contentsList" resultMap="CommandContent.CommandContentResult"/>
	  </resultMap>
	  
	  <!-- 表别名不用在字段映射中直接出现,为了方便查询,可以使用字段别名后修改对应映射文件进行修改 -->
	  <select id="queryCommandsList" parameterType="bean.Command" resultMap="CommandResult">
	  	SELECT  a.id as a_id,a.name,a.description,b.content 
	  	FROM command a 
		LEFT JOIN command_content b
		ON a.id=b.command_id
	    <where>
	    	<if test="name != null and !&quot;&quot;.equals(name.trim())">
		    	and a.NAME=#{name}
		    </if>
		    <if test="description != null and !&quot;&quot;.equals(description.trim())">
		    	and a.DESCRIPTION like '%' #{description} '%'
		    </if>
	    </where>		
	  </select>
</mapper>  