<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.1.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd">

	<!-- 配置文件,对SpringMVC进行配置 -->

	<!-- 支持注解形式的配置 -->
	<context:annotation-config/>
	
	<!-- DispatchServlet上下文,只搜索@Controller标注的类,不收索其他标注的类 -->
	<context:component-scan base-package="mvcdemo">
		<!-- 包含此注解 -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- HandlerMapping 无需配置,SpringMVC可以默认启动 -->
	
	
	<!-- 扩展注解,可以将参数传入控制器,同时指定消息的字符格式 -->
	<mvc:annotation-driven conversion-service="dateConverter">
		<!-- 消息转换器 -->
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes" value="text/html;charset=UTF-8"/>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>	
	
	<!-- 静态资源获得,对url中含有resources的进行映射到本地目录下 -->
	<mvc:resources location="/resources/**" mapping="/resources"/>
	
	<!-- 对返回映射路径进行修改,获取视图
		可以有多个,并进行order排序
		InternalResourceViewResolver放在最后
	 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<!-- 注意前缀格式,有没有/ -->
		<property name="prefix" value="/WEB-INF/jsps/"/>
		<!-- 注意后缀格式,有没有. -->
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<!-- 文件上传下载的Bean -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="1024000"/>
		<property name="defaultEncoding" value="UTF-8"/>
		<!-- 延迟文件解析,避免文件异常 -->
		<property name="resolveLazily" value="true"/>
	</bean>
	
	<!-- 对JSON格式的支持 -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<!-- 加载等级 -->
		<property name="order" value="1"/>
		<!-- 忽略请求头 -->
		<property name="ignoreAcceptHeader" value="true"/>
		<!-- 媒体格式 -->
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json"/>
				<entry key="xml" value="application/xml"/>
				<entry key="html" value="text/html"/>
			</map> 
		</property>
		<!-- 默认视图 -->
		<property name="defaultViews">
			<list>
				<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
			</list>
		</property>
	</bean>
	
	<!-- 注册拦截器 -->
	<mvc:interceptors>
		<!-- 全部网页拦截器的Bean -->
 		<bean class="mvcdemo.Interceptor.AllInterceptor"/>
		<!-- 其他的拦截器实现方法,无返回值 -->
		<bean class="mvcdemo.Interceptor.OtherInterceptor"/>
		<mvc:interceptor>
			<mvc:mapping path="/login/login"/>
			<bean class="mvcdemo.Interceptor.LoginInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 将传入的字符串转为布尔值 -->
	<bean id="stringToBooleanConverter" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<bean class="org.springframework.core.convert.support.StringToBooleanConverter"/>
			</set>
		</property>
	</bean>
 	
	<!-- 日期转换类,首先是类工厂 ,在mvc:annotation-driven conversion-service="dateFormatter" 中添加-->
	<bean id="dateFormatter" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<!-- 自定义的日期转换格式 -->
		<property name="formatters">
			<set>
				<bean class="mvcdemo.common.DateFormatter"/>
			</set>
		</property>
	</bean>
	
	<!-- 日期转换类,首先是类工厂  ,在mvc:annotation-driven conversion-service="dateFormatter" 中添加-->
	<bean id="dateConverter" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<!-- 自定义的日期转换格式 -->
		<property name="converters">
			<set>
				<bean class="mvcdemo.common.DateConverter"/>
			</set>
		</property>
	</bean>
	
	<!-- 扩展功能,对SpringData进行支持 -->
</beans>
